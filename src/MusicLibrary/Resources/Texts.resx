<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SignIn" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Bands" xml:space="preserve">
    <value>Bands</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="FeaturedAlbums" xml:space="preserve">
    <value>Featured albums</value>
  </data>
  <data name="RecentlyAdded" xml:space="preserve">
    <value>Recently added</value>
  </data>
  <data name="Albums" xml:space="preserve">
    <value>Albums</value>
  </data>
  <data name="Album" xml:space="preserve">
    <value>Album</value>
  </data>
  <data name="MoreBandAlbums" xml:space="preserve">
    <value>More albums of this band</value>
  </data>
  <data name="AudioUnsupported" xml:space="preserve">
    <value>Your browser does not support the audio element.</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordAgain" xml:space="preserve">
    <value>Password again</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>The email address is required!</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>First name is required!</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Last name is required!</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid email address!</value>
  </data>
  <data name="WeakPassword" xml:space="preserve">
    <value>The password must contain a number, small and big letter and be at least 6 characters long!</value>
  </data>
  <data name="PasswordMismatch" xml:space="preserve">
    <value>Passwords do not match!</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="Band" xml:space="preserve">
    <value>Band</value>
  </data>
  <data name="BandAlbums" xml:space="preserve">
    <value>Band albums</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="UserCollection" xml:space="preserve">
    <value>My collection</value>
  </data>
  <data name="UserCollectionEmpty" xml:space="preserve">
    <value>You haven't added any music to your collection.</value>
  </data>
  <data name="AddToCollection" xml:space="preserve">
    <value>Add to my collection</value>
  </data>
  <data name="RemoveFromCollection" xml:space="preserve">
    <value>Remove from my collection</value>
  </data>
  <data name="Reviews" xml:space="preserve">
    <value>Reviews</value>
  </data>
  <data name="AddReview" xml:space="preserve">
    <value>Add review</value>
  </data>
  <data name="ReviewQualityRequired" xml:space="preserve">
    <value>Album rating is required!</value>
  </data>
  <data name="ReviewTextRequired" xml:space="preserve">
    <value>Review text is required!</value>
  </data>
  <data name="UserNotLoggedIn" xml:space="preserve">
    <value>You need to be logged in to perform this action!</value>
  </data>
  <data name="SubmitReview" xml:space="preserve">
    <value>Submit review</value>
  </data>
  <data name="Members" xml:space="preserve">
    <value>Members</value>
  </data>
  <data name="Administration" xml:space="preserve">
    <value>Administration</value>
  </data>
  <data name="MyProfile" xml:space="preserve">
    <value>My profile</value>
  </data>
  <data name="SaveChanges" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="MyReviews" xml:space="preserve">
    <value>My reviews</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="BandReviews" xml:space="preserve">
    <value>Band reviews</value>
  </data>
  <data name="AlbumReviews" xml:space="preserve">
    <value>Album reviews</value>
  </data>
  <data name="AlbumName" xml:space="preserve">
    <value>Album</value>
  </data>
  <data name="BandName" xml:space="preserve">
    <value>Band</value>
  </data>
  <data name="CategoryName" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="HasInCollection" xml:space="preserve">
    <value>In collection</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>Name is required!</value>
  </data>
  <data name="BandRequired" xml:space="preserve">
    <value>Band is required!</value>
  </data>
  <data name="CategoryRequired" xml:space="preserve">
    <value>Category is required!</value>
  </data>
  <data name="CreateAlbum" xml:space="preserve">
    <value>Create album</value>
  </data>
  <data name="ApproveSelected" xml:space="preserve">
    <value>Approve selected</value>
  </data>
  <data name="DisapproveSelected" xml:space="preserve">
    <value>Disapprove selected</value>
  </data>
  <data name="CreateBand" xml:space="preserve">
    <value>Create band</value>
  </data>
  <data name="DescriptionRequired" xml:space="preserve">
    <value>Description is required!</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="CreateSong" xml:space="preserve">
    <value>Create song</value>
  </data>
  <data name="Songs" xml:space="preserve">
    <value>Songs</value>
  </data>
  <data name="YoutubeURL" xml:space="preserve">
    <value>Youtube URL</value>
  </data>
  <data name="UserRole" xml:space="preserve">
    <value>User role</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required!</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me on this computer</value>
  </data>
</root>